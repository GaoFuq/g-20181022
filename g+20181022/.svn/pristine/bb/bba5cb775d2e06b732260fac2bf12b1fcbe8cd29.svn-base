package com.code.clkj.menggong.activity.comUserLogin;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.support.v7.widget.Toolbar;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.code.clkj.menggong.R;
import com.code.clkj.menggong.activity.comHome.ActHome;
import com.code.clkj.menggong.response.RespActRegister;
import com.code.clkj.menggong.throwable.ExceptionEngine;
import com.fm.openinstall.OpenInstall;
import com.lf.tempcore.tempActivity.TempActivity;
import com.lf.tempcore.tempConfig.TempLoginConfig;
import com.lf.tempcore.tempModule.tempUtils.TempRegexUtil;
import com.lf.tempcore.tempModule.tempUtils.TempTimeUtil;
import com.lf.tempcore.tempResponse.ResponseLoginInfo;
import com.lf.tempcore.tempResponse.TempResponse;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;


/**
 * 注册界面
 */
public class RegisterActivity extends TempActivity implements ViewActRegisterI {

    @Bind(R.id.mRegister)
    TextView mRegister;  //注册按钮
    @Bind(R.id.toolbar_title)
    TextView toolbar_title;
    @Bind(R.id.toolbar_top)
    Toolbar toolbar_top;
    @Bind(R.id.mSendVerificationCode)
    Button mSendVerificationCode;
    @Bind(R.id.phone_number)
    EditText phone_number;//手机号码
    @Bind(R.id.mVerificationCode)
    EditText mVerificationCode;//验证码
    @Bind(R.id.mNewPassdWord)
    EditText mNewPassdWord; //密码
    @Bind(R.id.mInviteID)
    EditText mInviteID; //邀请人ID

    private TempRegexUtil tempRegexUtil = new TempRegexUtil();

    private PreActRegisterI mPreI;
    private TempTimeUtil mTempTimeUtil;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ButterKnife.bind(this);
    }

    @Override
    protected void setContentView(Bundle savedInstanceState) {
        setContentView(R.layout.activity_register_layout);
    }

    @Override
    protected void findViews() {
        initdata();
    }

    @Override
    protected void setListeners() {
        mPreI = new PreActRegisterImpl(this);
        mTempTimeUtil = new TempTimeUtil(60000, 1000, mSendVerificationCode);
        mTempTimeUtil.setTickString(getString(R.string.Send));
        mTempTimeUtil.setFinishString(getString(R.string.Retrieve_verification_code));
    }

    @Override
    protected void bindValues() {
    }

    String phone;
    String password;
    String registercheck;
    String phonecode = "";
    String museRegisterCode;


    @Override
    @OnClick({R.id.mRegister, R.id.mSendVerificationCode})
    protected void OnViewClicked(View v) {
        switch (v.getId()) {
            case R.id.mRegister:
                phone = phone_number.getText().toString();//手机号
                registercheck = mVerificationCode.getText().toString();//验证码
                password = mNewPassdWord.getText().toString();//密码
                museRegisterCode = mInviteID.getText().toString();//邀请码
                if (TextUtils.isEmpty(phone)) {
                    showToast("请输入电话号码");
                    return;
                }
                if (!tempRegexUtil.checkMobile(phone)) {
                    showToast("请输入正确的电话号码");
                    return;
                }
                if (TextUtils.isEmpty(registercheck)) {
                    showToast("请输入验证码");
                    return;
                }
                if (TextUtils.isEmpty(password)) {
                    showToast("请输入密码");
                    return;
                }
                mPreI.appUserRegister(phone, password, registercheck,museRegisterCode);
                break;
            case R.id.mSendVerificationCode:
                phonecode = phone_number.getText().toString();
                if (TextUtils.isEmpty(phonecode)) {
                    showToast("请输入手机号");
                    return;
                }
                mPreI.registerCode(phonecode);
                break;
        }

    }

    public void initdata() {
        toolbar_title.setText("注册");
        toolbar_title.setTextSize(18);
        toolbar_top.setNavigationIcon(R.mipmap.back);
        toolbar_top.setBackgroundColor(Color.parseColor("#D3D3D3"));
    }

    @Override
    public void toast(String message) {
        showToast(message);
    }

    @Override
    public void showConntectError(ExceptionEngine.ApiException e) {
        showToast(e.message);
    }

    @Override
    public void showPro() {
        showProgressDialog(false);
    }

    @Override
    public void disPro() {
        dismissProgressDialog();
    }

    @Override
    public void appUserRegisterSuccess(RespActRegister data) {
        //用户注册成功后调用
        OpenInstall.reportRegister();
        mPreI.userLogin(phone, password);

    }

    @Override
    public void registerCodeSuccess(TempResponse data) {
        mTempTimeUtil.start();
    }

    @Override
    public void userLoginSuccess(ResponseLoginInfo data) {
        TempLoginConfig.sf_savePwd(password);
        startActivity(new Intent(this, ActHome.class));
        finish();
    }
}
